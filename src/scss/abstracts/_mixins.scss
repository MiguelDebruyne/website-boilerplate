//************************************************************************************
// MIXINS
//************************************************************************************


// Use REM in modern browsers and fallback to pixels for IE8-
// -----------------------------------------------------------------------------------
@mixin font-size ($size) {
  font-size: $size + px;
  font-size: pxtorem($size);
}


// Opacity fix for IE8-
// -----------------------------------------------------------------------------------
@mixin opacity ($opacity) {
  opacity: $opacity;
  $opacity-ie: $opacity * 100;
  filter: alpha(opacity=$opacity-ie);
}


// Better readability for light text on a dark background
// -----------------------------------------------------------------------------------
@mixin font-smoothing ($enable: true) {
  @if $enable {
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
  }
  @else {
    -webkit-font-smoothing: subpixel-antialiased;
    -moz-osx-font-smoothing: auto;
  }
}


// Create all style effects for links
// -----------------------------------------------------------------------------------
@mixin links ($link, $visited, $hover, $active) {
  & {
    color: $link;
    &:visited {
      color: $visited;
    }
    &:hover {
      color: $hover;
    }
    &:active, &:focus {
      color: $active;
    }
  }
}


// Creating a flexible grid with % margins
// -----------------------------------------------------------------------------------
@mixin rowMachine ($numPerRow, $margin, $marginBot: 0) {
  width: (100% - (($numPerRow - 1) * $margin)) / $numPerRow;

  @if $marginBot == 0 {
    $marginBot: $margin;
  }

  &:nth-of-type(n) {
    margin-bottom: $marginBot;
    margin-right: $margin;
  }
  &:nth-of-type(#{$numPerRow}n) {
    margin-right: 0;
    // margin-bottom: 0;
  }
}

@mixin rowMachineFiller ($numPerRow, $margin, $numColFil) {
  // width: (((100% - (($numPerRow - 1) * $margin)) / $numPerRow) * $numColFil) + $margin;
  width: (((100% - (($numPerRow - 1) * $margin)) / $numPerRow) * $numColFil) + $margin;
  margin-right: 0;
}


// Align an element with absolute positioning
// -----------------------------------------------------------------------------------
@mixin align ($alignment) {
  position: absolute;

  @if $alignment == 'horizontal' {
    left: 50%;
    right: initial;
    transform: translateX(-50%);
  }

  @if $alignment == 'vertical' {
    top: 50%;
    bottom: initial;
    transform: translateY(-50%);
  }

  @if $alignment == 'center' {
    left: 50%;
    top: 50%;
    transform: translate(-50%, -50%);
  }
}


// This mixin can be used to set the object-fit:
// @include object-fit(contain);
// or object-fit and object-position:
// @include object-fit(cover, top);
// -----------------------------------------------------------------------------------
@mixin object-fit ($fit: fill, $position: null){
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  // -o-object-fit: $fit;
  object-fit: $fit;

  @if $position {
    // -o-object-position: $position;
    object-position: $position;
    font-family: 'object-fit: #{$fit}; object-position: #{$position}';
  } @else {
    font-family: 'object-fit: #{$fit}';
  }
}


// Break out of bootstrap grid
// https://medium.com/@simonlidesign/an-elegant-way-to-break-the-bootstrap-container-2912628e4829
// -----------------------------------------------------------------------------------
@mixin break-out {
  width: 100vw;
  position: relative;
  left: calc(-1 * (100vw - 100%) / 2);
}

@mixin remove-break-out {
  width: 100%;
  left: 0;
}


// Change color of menu btn on menu open
// -----------------------------------------------------------------------------------
@mixin change-menu-btn-color ($color) {
  .hamburger-inner {
    transition: background-color $transition;
  }

  &.is-active {
    .hamburger-inner {
      &:before,
      &:after {
        background-color: $color;
      }
    }
  }
}
